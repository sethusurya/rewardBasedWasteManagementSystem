/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.WRU;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.UserAccount.UserAccount;
import Business.WRU.WRU_Company;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sethu
 */
public class Wru_SuccessfulOrders extends javax.swing.JPanel {

    /**
     * Creates new form Wru_SuccessfulOrders
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount account;
    WRU_Company company;
    public Wru_SuccessfulOrders(JPanel userProcessContainer,EcoSystem ecosystem, UserAccount account, WRU_Company company) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.company = company;
        
        populateData(ecosystem.getOrderDirectory());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblDeliveryTotal = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblBidTotal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 130, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Order Id", "Status", "Delivery Time", "Waste Type", "Quantity (lbs)", "Bid Cost ($)", "Delivery Cost ($)"
            }
        ));
        jScrollPane1.setViewportView(table);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 680, 157));

        jButton2.setText("Request Logistics");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 270, 150, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("SUCCESSFUL ORDERS");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 150, 22));

        jLabel2.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Delivery Charges ($): ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 149, 34));

        lblDeliveryTotal.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        lblDeliveryTotal.setText("$$$");
        add(lblDeliveryTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 360, 104, 34));

        jLabel4.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Bid Costs ($) : ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 400, 149, 34));

        lblBidTotal.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        lblBidTotal.setText("$$$");
        add(lblBidTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 400, 104, 34));

        jLabel6.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Total Amount Spent ($) : ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(289, 460, 160, 34));

        lblTotal.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        lblTotal.setText("$$$");
        add(lblTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 460, 104, 34));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/WRU_all.png"))); // NOI18N
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = table.getSelectedRow();
        if (selectedRowIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            Order myOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            if (myOrder.getStatus().equals("bid accepted")) {
                myOrder.setStatus("requested logistics");
                populateData(ecosystem.getOrderDirectory()); // refreshing
            } else {
                JOptionPane.showMessageDialog(this, "Logistics already requested (or) the product is delivered");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selct a bid accepted order to request logistics");
            return;
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBidTotal;
    private javax.swing.JLabel lblDeliveryTotal;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    private void populateData(OrderDirectory myOrderDirectory) {
        javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)table.getModel();
        model.setRowCount(0);
        
        double deliveryCharges = 0;
        double biddingCharges = 0;
        double total = 0;
        
        for (Order o: myOrderDirectory.getOrderList()){
            if (o.getBuyingCompanyId() == company.getId()) {
                Object[] row = new Object[7];
                row[0] = o;
                row[1] = o.getStatus();
                row[2] = o.getDeliveredTimeStamp() != null ? o.getDeliveredTimeStamp() : "N/A";
                row[3] = o.getWasteType();
                row[4] = o.getQuantity();
                row[5] = o.getBuyingCost();
                row[6] = o.getDeliveryCost() != 0 ? o.getDeliveryCost() : "N/A";
                
                deliveryCharges = deliveryCharges+o.getDeliveryCost();
                biddingCharges = biddingCharges+o.getBuyingCost();

                model.addRow(row);
            }
        }
        total = deliveryCharges + biddingCharges;
        lblDeliveryTotal.setText(String.valueOf(deliveryCharges));
        lblBidTotal.setText(String.valueOf(biddingCharges));
        lblTotal.setText(String.valueOf(total));
    }

    private void goBack() {
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
    }
}
