/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.WSU;

import Business.Bid.Bid;
import Business.Bid.BidDirectory;
import Business.EcoSystem;
import Business.Order.Order;
import Business.UserAccount.UserAccount;
import Business.WRU.WRU_Company;
import Business.WSU.WSU_Company;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varunvuppala
 */
public class BidsJpanel extends javax.swing.JPanel {

    /**
     * Creates new form BidsJpanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount account;
    WSU_Company company;
    Order order;
    public BidsJpanel(JPanel userProcessContainer,EcoSystem ecosystem, UserAccount account, WSU_Company company, Order order) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.company = company;
        this.order = order;
        
        refreshData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnAcceptbid = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblWasteType = new javax.swing.JLabel();
        lblWasteQuantity = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblOrderId = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bid Id", "Bid Price ($)", "Bidding Company", "Bidding Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 576, 182));

        btnAcceptbid.setText("Accept Bid");
        btnAcceptbid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptbidActionPerformed(evt);
            }
        });
        add(btnAcceptbid, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 470, -1, -1));

        title.setFont(new java.awt.Font("Helvetica", 1, 22)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("VIEW BIDS");
        add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 230, 34));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 110, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Quantity(lbs) : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 150, -1, 24));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Waste Type : ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 110, 86, 24));

        lblWasteType.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        add(lblWasteType, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 110, 86, 24));

        lblWasteQuantity.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        add(lblWasteQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 90, 24));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Order Id : ");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, 86, 24));

        lblOrderId.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        add(lblOrderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 86, 24));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/WSU_800x600.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 0, 800, 590));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAcceptbidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptbidActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = table.getSelectedRow();
        double currentReward = company.getMyrewards();
        if (selectedRowIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            Bid selectedBid = (Bid) model.getValueAt(selectedRowIndex, 0);
            if (selectedBid.getBidStatus().equals("pending")) {
                for(Bid b: ecosystem.getBidDirectory().getBidList()) {
                    if (b.getOrderId() == order.getId()){
                        if(b.getId() == selectedBid.getId()){
                            b.setBidStatus("success"); // set bid status to success
                            Order o = ecosystem.getOrderDirectory().getOrderById(order.getId());
                            if (o != null) { // updated the order details
                                o.setAcceptedBidId(selectedBid.getId());
                                o.setBuyingCompanyId(selectedBid.getBidCompanyId());
                                o.setBuyingTimeStamp(new Date());
                                o.setBuyingUsername(selectedBid.getBidUserName());
                                o.setBuyingCost(selectedBid.getBidValue());
                                o.setStatus("bid accepted");
                                company.setMyrewards(currentReward + selectedBid.getBidValue());
                            }
                        } else {
                            b.setBidStatus("fail"); // set bid status to fail
                        }
                    }
                }
                refreshData();
            } else {
                JOptionPane.showMessageDialog(this, "Bids are already accepted, you cannot change!!");
                return;
            }
        }else {
            JOptionPane.showMessageDialog(this,"Select a bid to accept it");
        }
        // get bidlist for the order, set the selected one as success and others as failed
        // update the order with bidders details and current status of the order
    }//GEN-LAST:event_btnAcceptbidActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptbid;
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrderId;
    private javax.swing.JLabel lblWasteQuantity;
    private javax.swing.JLabel lblWasteType;
    private javax.swing.JTable table;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

    private void goBack() {
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
    }

    private void populateBids(BidDirectory bidDirectory) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        for(Bid b: bidDirectory.getBidList()){
            if(b.getOrderId() == order.getId()) {
                Object[] row = new Object[4];
                row[0] = b;
                row[1] = b.getBidValue();
                row[2] = "N/A";
                WRU_Company c = ecosystem.getWRUCompanyDirectory().findCompanyById(b.getBidCompanyId());
                if (c != null) row[2] = c.getName();
                row[3] = b.getBidStatus();
                model.addRow(row);
            }
        }
    }

    private void populateData() {
        lblOrderId.setText(String.valueOf(order.getId()));
        lblWasteType.setText(order.getWasteType());
        lblWasteQuantity.setText(String.valueOf(order.getQuantity()));
    }
    
    private void refreshData() {
        populateData();
        populateBids(ecosystem.getBidDirectory());
    }
}
