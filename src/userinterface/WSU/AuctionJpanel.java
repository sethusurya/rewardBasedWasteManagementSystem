/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.WSU;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.UserAccount.UserAccount;
import Business.WSU.WSU_Company;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author varunvuppala
 */
public class AuctionJpanel extends javax.swing.JPanel {

    /**
     * Creates new form AuctionJpanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount account;
    WSU_Company company;
    public AuctionJpanel(JPanel userProcessContainer,EcoSystem ecosystem, UserAccount account, WSU_Company company) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.company = company;
        
        populateTables(ecosystem.getOrderDirectory());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblAuctionArea = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSegregated = new javax.swing.JTable();
        btnConductAuction = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAuctioned = new javax.swing.JTable();
        lblSegregardWaste = new javax.swing.JLabel();
        lblAuctionedWaste = new javax.swing.JLabel();
        btnMyEarnings = new javax.swing.JButton();
        btnRedeem = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        btnViewBids = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblAuctionArea.setFont(new java.awt.Font("Helvetica", 1, 18)); // NOI18N
        lblAuctionArea.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAuctionArea.setText("AUCTION WORK AREA");
        add(lblAuctionArea, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 260, 40));

        jTableSegregated.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Orderid", "Type of Waste", "Quantity(lbs)", "TimeStamp", "Reported By"
            }
        ));
        jScrollPane1.setViewportView(jTableSegregated);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 128, 564, 155));

        btnConductAuction.setText("ConductAuction");
        btnConductAuction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConductAuctionActionPerformed(evt);
            }
        });
        add(btnConductAuction, new org.netbeans.lib.awtextra.AbsoluteConstraints(615, 128, -1, -1));

        jTableAuctioned.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Orderid", "Type of Waste", "Quantity(lbs)", "TimeStamp", "Status"
            }
        ));
        jScrollPane2.setViewportView(jTableAuctioned);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 564, 155));

        lblSegregardWaste.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        lblSegregardWaste.setText("Segregated Waste");
        add(lblSegregardWaste, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 106, -1, -1));

        lblAuctionedWaste.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        lblAuctionedWaste.setText("Auctioned Waste");
        add(lblAuctionedWaste, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        btnMyEarnings.setText("View Earnings");
        btnMyEarnings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMyEarningsActionPerformed(evt);
            }
        });
        add(btnMyEarnings, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, 138, -1));

        btnRedeem.setText("Redeem");
        btnRedeem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedeemActionPerformed(evt);
            }
        });
        add(btnRedeem, new org.netbeans.lib.awtextra.AbsoluteConstraints(629, 490, 130, -1));

        btnReport.setText("Report Waste");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });
        add(btnReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 140, -1));

        btnViewBids.setText("View Bids");
        btnViewBids.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewBidsActionPerformed(evt);
            }
        });
        add(btnViewBids, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 360, 138, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 6, -1, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 250, 146, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/WSU_800x600.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void btnConductAuctionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConductAuctionActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTableSegregated.getSelectedRow();
        if (selectedRowIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) jTableSegregated.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            selectedOrder.setStatus("out for auction");
            refreshData();
        } else {
            JOptionPane.showMessageDialog(this,"Select an Order to conduct auction"); // status change
            return;
        }
    }//GEN-LAST:event_btnConductAuctionActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        userProcessContainer.add("myNewReport", new AdminWasteJpanel(userProcessContainer,ecosystem, account, company));
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnReportActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTableSegregated.getSelectedRow();
        if (selectedRowIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) jTableSegregated.getModel();
            Order selectedRow = (Order) model.getValueAt(selectedRowIndex, 0);
            if (!selectedRow.getStatus().equals("reported")) {
                JOptionPane.showMessageDialog(this, "Order has been already placed for auction!!");
                return;
            } else {
                int input = JOptionPane.showConfirmDialog(null, "Are you sure?", "Confirmation Dialog", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (input == 0) {
                    ecosystem.getOrderDirectory().removeOrderById(selectedRow.getId()); // remove the order from echosystem
                    refreshData();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select an order row to delete it");
            return;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewBidsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewBidsActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTableAuctioned.getSelectedRow();
        if (selectedRowIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) jTableAuctioned.getModel();
            Order selectedOrder = (Order) model.getValueAt(selectedRowIndex, 0);
            userProcessContainer.add("viewBids", new BidsJpanel(userProcessContainer,ecosystem, account, company, selectedOrder));
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } else {
            JOptionPane.showMessageDialog(this,"Please select an order to view its bids");
            return;
        }
    }//GEN-LAST:event_btnViewBidsActionPerformed

    private void btnRedeemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedeemActionPerformed
        // TODO add your handling code here:
        userProcessContainer.add("myRedemptionPage", new FinanceJpanel(userProcessContainer, ecosystem, account, company));
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnRedeemActionPerformed

    private void btnMyEarningsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMyEarningsActionPerformed
        // TODO add your handling code here:
        userProcessContainer.add("myEarningsPage", new RewardsJPanel(userProcessContainer, ecosystem, account, company));
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnMyEarningsActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        populateTables(ecosystem.getOrderDirectory());
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnConductAuction;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnMyEarnings;
    private javax.swing.JButton btnRedeem;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnViewBids;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAuctioned;
    private javax.swing.JTable jTableSegregated;
    private javax.swing.JLabel lblAuctionArea;
    private javax.swing.JLabel lblAuctionedWaste;
    private javax.swing.JLabel lblSegregardWaste;
    // End of variables declaration//GEN-END:variables

    private void populateTables(OrderDirectory orderDirectory) {
        DefaultTableModel model1 = (DefaultTableModel) jTableSegregated.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTableAuctioned.getModel();
        model1.setRowCount(0);
        model2.setRowCount(0);
        
        for (Order o: orderDirectory.getOrderList()){
            if (o.getReportingCompanyId() == company.getId() && !o.getIsReportedByVolunteer()) {
                if(o.getStatus().equals("reported")) { // only reported status will be shown here
                    Object[] row1 = new Object[5];
                    row1[0] = o;
                    row1[1] = o.getWasteType();
                    row1[2] = o.getQuantity();
                    row1[3] = o.getReportingTimeStamp();
                    row1[4] = o.getReportingUsername();

                    model1.addRow(row1);
                } else {
                    Object[] row2 = new Object[5];
                    row2[0] = o;
                    row2[1] = o.getWasteType();
                    row2[2] = o.getQuantity();
                    row2[3] = o.getReportingTimeStamp();
                    row2[4] = o.getStatus();

                    model2.addRow(row2);
                }
            }
        }
    }

    private void refreshData() {
        populateTables(ecosystem.getOrderDirectory());
    }

    private void goBack() {
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
    }
}
