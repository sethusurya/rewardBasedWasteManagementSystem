/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.WSU;

import Business.EcoSystem;
import Business.Order.Order;
import Business.UserAccount.UserAccount;
import Business.WSU.WSU_Company;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.Order.OrderDirectory;
import Business.RU.RU_Company;
import Business.RU.RU_CompanyDirectory;
import Business.Redemption.Redemption;
import Business.Voucher.Voucher;
import Business.Voucher.VoucherDirectory;
import Validations.Functions;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
/**
 *
 * @author varunvuppala
 */
public class FinanceJpanel extends javax.swing.JPanel {

    /**
     * Creates new form FinanceJpanel
     */
    WSU_Company company;
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount account;

    public FinanceJpanel(JPanel userProcessContainer, EcoSystem ecosystem, UserAccount account, WSU_Company company) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.company = company;
        
        refreshData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        redeemBtnGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAccptedbids = new javax.swing.JTable();
        btnRedeem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableSelectVoucher = new javax.swing.JTable();
        lblSelectVoucher = new javax.swing.JLabel();
        lblReedemableValue = new javax.swing.JLabel();
        lblValue = new javax.swing.JLabel();
        lblSelectVoucher1 = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        txtCashValue = new javax.swing.JTextField();
        radioRedeemCash = new javax.swing.JRadioButton();
        radioRedeemVoucher = new javax.swing.JRadioButton();
        cmbVoucherCompany = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTableAccptedbids.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Orderid", "Type of Waste", "Quantity(lbs)", "Bid Price", "Bidding Company"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableAccptedbids);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 576, 170));

        btnRedeem.setText("Redeem");
        btnRedeem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedeemActionPerformed(evt);
            }
        });
        add(btnRedeem, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 400, 120, -1));

        jTableSelectVoucher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Voucher Id", "Company Name", "Description", "Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableSelectVoucher);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 400, 576, 150));

        lblSelectVoucher.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        lblSelectVoucher.setText("Select Voucher");
        add(lblSelectVoucher, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 320, 100, 30));

        lblReedemableValue.setFont(new java.awt.Font("Helvetica", 1, 22)); // NOI18N
        lblReedemableValue.setText("Reedemable Value:");
        add(lblReedemableValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        lblValue.setFont(new java.awt.Font("Helvetica", 1, 22)); // NOI18N
        lblValue.setText("jLabel3");
        add(lblValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 95, -1));

        lblSelectVoucher1.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        lblSelectVoucher1.setText("Successful Bids");
        add(lblSelectVoucher1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 120, -1));

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 14, 111, -1));

        txtCashValue.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        txtCashValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCashValueActionPerformed(evt);
            }
        });
        add(txtCashValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 280, 129, -1));

        redeemBtnGroup.add(radioRedeemCash);
        radioRedeemCash.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        radioRedeemCash.setText("Redeem Cash");
        radioRedeemCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRedeemCashActionPerformed(evt);
            }
        });
        add(radioRedeemCash, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 280, -1, -1));

        redeemBtnGroup.add(radioRedeemVoucher);
        radioRedeemVoucher.setFont(new java.awt.Font("Helvetica", 1, 13)); // NOI18N
        radioRedeemVoucher.setText("Redeem Voucher");
        radioRedeemVoucher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioRedeemVoucherActionPerformed(evt);
            }
        });
        add(radioRedeemVoucher, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, -1));

        cmbVoucherCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbVoucherCompany.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbVoucherCompanyActionPerformed(evt);
            }
        });
        add(cmbVoucherCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 320, 127, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/images/WSU_800x600.png"))); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 810, 600));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        goBack();
    }//GEN-LAST:event_btnBackActionPerformed

    private void txtCashValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCashValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCashValueActionPerformed

    private void btnRedeemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedeemActionPerformed
        // TODO add your handling code here:
        Redemption r = new Redemption();
        Double myRewards = company.getMyrewards();
        
        if (radioRedeemCash.isSelected()){
//            !Functions.isValidNumber(txtCashValue.getText()) || !txtCashValue.getText().length() >= 1
            if(!(txtCashValue.getText().length() >= 1) || !(Functions.isValidNumber(txtCashValue.getText()))){
                JOptionPane.showMessageDialog(this, "Enter valid cash amount", null, JOptionPane.ERROR_MESSAGE);
                return; 
            }
            Double cashAmount = Double.parseDouble(txtCashValue.getText());
            r.setRedemption_date(new Date());
            r.setVoucher_type("Cash");
            r.setWsu_id(company.getId());
            if(myRewards < cashAmount){
                JOptionPane.showMessageDialog(this, "Selected Amount exceeds rewards available", null, JOptionPane.ERROR_MESSAGE);
                return;
            }
            r.setVoucher_value(cashAmount);
            ecosystem.getRedemptionDirectory().createRedemption(r); // create redemtion
            myRewards = myRewards - cashAmount;
            company.setMyrewards(myRewards); // subtract available cash
            
        }else if(radioRedeemVoucher.isSelected()){
            int selectedRowIndex = jTableSelectVoucher.getSelectedRow();
            
            if(selectedRowIndex >= 0){
                DefaultTableModel model = (DefaultTableModel) jTableSelectVoucher.getModel();
                Voucher selectedVoucher = (Voucher) model.getValueAt(selectedRowIndex, 0);
                if (selectedVoucher == null) {
                    JOptionPane.showMessageDialog(this, "Voucher not found, please select other vouche)", null, JOptionPane.ERROR_MESSAGE);
                    return;
                }
                if (myRewards < selectedVoucher.getVoucherWorth()) {
                   JOptionPane.showMessageDialog(this, "Selected Voucher cost exceeds rewards available", null, JOptionPane.ERROR_MESSAGE);
                   return; 
                }
                r.setRedemption_date(new Date());
                r.setVoucher_type("Voucher");
                r.setWsu_id(company.getId());
                r.setVoucher_id(selectedVoucher.getId());
                r.setVoucher_value(selectedVoucher.getVoucherWorth());
                ecosystem.getRedemptionDirectory().createRedemption(r); // create redemtion
                myRewards = myRewards - selectedVoucher.getVoucherWorth();
                company.setMyrewards(myRewards); // subtract available cash
                
            }else{
                JOptionPane.showMessageDialog(this, "Please select a voucher to redeem");
                return;
            }
        }else{
            JOptionPane.showMessageDialog(null,"Please choose a redeem option", "Title",1);
            return;
        }
        refreshData();
    }//GEN-LAST:event_btnRedeemActionPerformed

    private void radioRedeemVoucherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRedeemVoucherActionPerformed
        // TODO add your handling code here:
        jTableSelectVoucher.setEnabled(true);
        txtCashValue.setEnabled(false);
        txtCashValue.setBackground(Color.GRAY);
        jTableSelectVoucher.setBackground(null);
        populateVouchers(ecosystem.getVoucherDirectory(), null);
    }//GEN-LAST:event_radioRedeemVoucherActionPerformed

    private void radioRedeemCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioRedeemCashActionPerformed
        // TODO add your handling code here:
        txtCashValue.setEnabled(true);
        jTableSelectVoucher.setEnabled(false);
        jTableSelectVoucher.setBackground(Color.GRAY);
        txtCashValue.setBackground(null);
    }//GEN-LAST:event_radioRedeemCashActionPerformed

    private void cmbVoucherCompanyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbVoucherCompanyActionPerformed
        // TODO add your handling code here:
        populateVouchers(ecosystem.getVoucherDirectory(), cmbVoucherCompany.getSelectedItem().toString());
    }//GEN-LAST:event_cmbVoucherCompanyActionPerformed

//    public void itemStateChanged(ItemEvent e)
//    {
//        if(e.getStateChange() == ItemEvent.SELECTED) {
//            if(e.getItem() == jboxRedeemCash) {
//                jboxRedeemVoucher.setSelected(false);
//            } else {
//                jboxRedeemCash.setSelected(false);
//            }
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRedeem;
    private javax.swing.JComboBox<String> cmbVoucherCompany;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableAccptedbids;
    private javax.swing.JTable jTableSelectVoucher;
    private javax.swing.JLabel lblReedemableValue;
    private javax.swing.JLabel lblSelectVoucher;
    private javax.swing.JLabel lblSelectVoucher1;
    private javax.swing.JLabel lblValue;
    private javax.swing.JRadioButton radioRedeemCash;
    private javax.swing.JRadioButton radioRedeemVoucher;
    private javax.swing.ButtonGroup redeemBtnGroup;
    private javax.swing.JTextField txtCashValue;
    // End of variables declaration//GEN-END:variables

    private void goBack() {
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer); 
    }

    private void populateData() {
        lblValue.setText("$ " + String.valueOf(company.getMyrewards()));
        
        ArrayList<String> voucherCompanyList = new ArrayList<String>();
        voucherCompanyList.add("");
        for(RU_Company c: ecosystem.getRUCompanyDirectory().getCompanies()) {
            voucherCompanyList.add(c.getName());
        }
        String[] myCompaniesList = voucherCompanyList.toArray(new String[0]);
        cmbVoucherCompany.setModel(new javax.swing.DefaultComboBoxModel<>(myCompaniesList));
 
    }
    
    private void populateTables(OrderDirectory orderDirectory){
        DefaultTableModel model1 = (DefaultTableModel) jTableAccptedbids.getModel();
        model1.setRowCount(0);
        
        for (Order o: orderDirectory.getOrderList()){
            if (o.getReportingCompanyId() == company.getId()) {
                if(!((o.getStatus().equals("reported")) | (o.getStatus().equals("out for auction")))) {
                    Object[] row1 = new Object[5];
                    row1[0] = o;
                    row1[1] = o.getWasteType();
                    row1[2] = o.getQuantity();
                    row1[3] = o.getBuyingCost();
                    row1[4] = ecosystem.getWRUCompanyDirectory().findCompanyById(o.getBuyingCompanyId());

                    model1.addRow(row1);
                }
            }
        }
    }
    
    private void refreshData() {
        populateData();
        populateVouchers(ecosystem.getVoucherDirectory(), null);
        populateTables(ecosystem.getOrderDirectory());
    }

    private void populateVouchers(VoucherDirectory voucherDirectory, String VoucherCompanyName) {
        DefaultTableModel model2 = (DefaultTableModel) jTableSelectVoucher.getModel();
        model2.setRowCount(0);
        RU_Company mySelectedCompany = ecosystem.getRUCompanyDirectory().findCompanyByName(VoucherCompanyName);
            for(Voucher v: voucherDirectory.getVoucherDirectory()){
                if(VoucherCompanyName != null && mySelectedCompany != null) {
                        if (v.getVoucherCompanyId() == mySelectedCompany.getId()) {
                            Object[] row = new Object[4];
                            row[0] = v;
                            row[1] = "N/A";
                            row[2] = v.getVoucherDescription();
                            row[3] = v.getVoucherWorth();

                            RU_Company voucherCompany = ecosystem.getRUCompanyDirectory().findCompanyById(v.getVoucherCompanyId());
                            if (voucherCompany != null) row[1] = voucherCompany.getName();
                            model2.addRow(row);  
                        }
                } else {
                    Object[] row = new Object[4];
                    row[0] = v;
                    row[1] = "N/A";
                    row[2] = v.getVoucherDescription();
                    row[3] = v.getVoucherWorth();
                    
                    RU_Company voucherCompany = ecosystem.getRUCompanyDirectory().findCompanyById(v.getVoucherCompanyId());
                    if (voucherCompany != null) row[1] = voucherCompany.getName();
                    model2.addRow(row);
                }
            }
        
    }
}
