/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package userinterface.VolunteerOrganization;

import Business.EcoSystem;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.UserAccount.UserAccount;
import Business.VU.VU_Company;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.WSU.employeeJpanel.WasteType;

/**
 *
 * @author sethu
 */
public class WasteReportingVolunteerJpanel extends javax.swing.JPanel {

    /**
     * Creates new form WasteReportingVolunteerJpanel
     */
    JPanel userProcessContainer;
    EcoSystem ecosystem;
    UserAccount account;
    VU_Company company;
    public WasteReportingVolunteerJpanel(JPanel userProcessContainer,EcoSystem ecosystem, UserAccount account, VU_Company company) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.ecosystem = ecosystem;
        this.account = account;
        this.company = company;
        
        lblUsername.setText(account.getUsername());
        lblOrgname.setText(company.getName());
        populateMenu();
        populateTable(ecosystem.getOrderDirectory());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        cmbWasteType = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btnReport = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        lblUsername = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblOrgname = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Waste Type", "Quantity ($)", "Time Stamp", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 102, 555, 179));

        cmbWasteType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(cmbWasteType, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 299, 118, 32));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Type of Waste : ");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 308, -1, -1));

        btnReport.setText("Report");
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });
        add(btnReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 390, 70, -1));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Quantity(lbs) : ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 351, 82, -1));
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(284, 342, 118, 32));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(617, 102, 80, -1));

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblUsername.setText("Username");
        add(lblUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 21, 173, 25));

        jLabel4.setText("Welcome,");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 21, -1, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("VOLUNTEER WASTE SORTING PANEL");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 76, 640, 20));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("VOLUNTEER ORG : ");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 120, 20));

        lblOrgname.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblOrgname.setText("ORG NAME");
        add(lblOrgname, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, 140, 20));
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = table.getSelectedRow();
        if (selectedRowIndex >= 0) {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            Order selectedRow = (Order) model.getValueAt(selectedRowIndex, 0);
            if (!selectedRow.getStatus().equals("reported")) {
                JOptionPane.showMessageDialog(this, "Order has been already placed for donation!!");
                return;
            } else {
                int input = JOptionPane.showConfirmDialog(null, "Are you sure?", "Confirmation Dialog", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (input == 0) {
                    ecosystem.getOrderDirectory().removeOrderById(selectedRow.getId()); // remove the order from echosystem
                    refreshData();
                    clearInputs();
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Select an order row to delete it");
            return;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        if (txtQuantity.getText().length() == 0) { // empty value Check
            JOptionPane.showMessageDialog(this, "Please Give the Quantity of waste");
            return;
        }
        
        Date currentTime = new Date();
        String wasteType = cmbWasteType.getSelectedItem().toString();
        Double wasteQuantity = Double.parseDouble(txtQuantity.getText());
        String status = "reported"; // only limited status are given
        
        // creating new order
        Order newOrder = new Order();
        newOrder.setStatus(status);
        newOrder.setWasteType(wasteType);
        newOrder.setQuantity(wasteQuantity);
        newOrder.setReportingTimeStamp(currentTime);
        newOrder.setReportingUsername(account.getUsername());
        newOrder.setReportingCompanyId(company.getId()); //wsu_company
        newOrder.setIsReportedByVolunteer(true); // cause this is voluntary
        ecosystem.getOrderDirectory().createOrder(newOrder);
        refreshData();
        clearInputs();
        JOptionPane.showMessageDialog(this, "Order Created");
    }//GEN-LAST:event_btnReportActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReport;
    private javax.swing.JComboBox<String> cmbWasteType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblOrgname;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables
    
    private void populateMenu() {
        ArrayList<String> wasteList = new ArrayList<String>();
        for(WasteType c : WasteType.values()) {
            wasteList.add(c.toString());
        }
        // convert arraylist to array
        String[] myWasteTypes = wasteList.toArray(new String[0]);
        // populating the menus
        cmbWasteType.setModel(new javax.swing.DefaultComboBoxModel<>(myWasteTypes));
    }
    
    private void populateTable(OrderDirectory orderDirectory) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
        
        // loopthrough orders
        
        for (Order o: orderDirectory.getOrderList()){
            if (o.getReportingCompanyId() == company.getId() && o.getReportingUsername().equals(account.getUsername())&& o.getIsReportedByVolunteer()) {
                Object[] row = new Object[5];
                row[0] = o;
                row[1] = o.getWasteType();
                row[2] = o.getQuantity();
                row[3] = o.getReportingTimeStamp();
                row[4] = o.getStatus();

                model.addRow(row);   
            }
        }
    }
    
    private void clearInputs() {
        txtQuantity.setText("");
        cmbWasteType.setSelectedIndex(0);
    }

    private void refreshData() {
        populateTable(ecosystem.getOrderDirectory());
    }

}
